{"version":3,"sources":["../node_modules/react-chartjs-2/es/index.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_createBaseEach.js","../node_modules/chart.js/dist/Chart.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js"],"names":["process","__webpack_require__","d","__webpack_exports__","Doughnut","Pie","Line","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","REACT_APP_BASEURL","ChartComponent","_React$Component","_temp","_this","this","_len","args","Array","_key","apply","concat","handleOnClick","event","chartInstance","_this$props","props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","undefined","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","type","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","data","memoizeDataProps","datasets","map","set","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","a","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","defaultProps","values","destroy","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","object","func","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","display","position","_React$Component2","_this5","_ref","_React$Component3","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","_this15","_ref6","_React$Component8","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","baseForOwn","baseEach","createBaseEach","module","exports","isArrayLike","eachFunc","fromRight","collection","iteratee","index","iterable","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","arg","slice","pair","exec","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","result","prop","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","noop","uid","isNullOrUndef","isArray","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","get","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecations","deprecateSimple","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","baseIsEqual","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","accumulator"],"mappings":"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","file":"static/js/5.18963266.chunk.js","sourcesContent":["var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;"],"sourceRoot":""}