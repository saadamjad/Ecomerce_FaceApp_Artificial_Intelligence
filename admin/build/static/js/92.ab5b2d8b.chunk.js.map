{"version":3,"sources":["views/Pages/Login/Login.js"],"names":["Login","props","_this","Object","_Users_macbook_sbadminportal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_macbook_sbadminportal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_macbook_sbadminportal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","handleSubmit","values","_ref","_ref$props","setSubmitting","console","log","email","password","localStorage","setItem","history","push","setState","visible","massege","msgType","state","wrongPass","onDismiss","bind","_Users_macbook_sbadminportal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","getItem","undefined","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","md","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","formik__WEBPACK_IMPORTED_MODULE_7__","initialValues","validationSchema","Yup","shape","required","onSubmit","render","formProps","reactstrap__WEBPACK_IMPORTED_MODULE_16__","row","reactstrap__WEBPACK_IMPORTED_MODULE_17__","reactstrap__WEBPACK_IMPORTED_MODULE_18__","addonType","reactstrap__WEBPACK_IMPORTED_MODULE_19__","type","name","placeholder","reactstrap__WEBPACK_IMPORTED_MODULE_20__","color","disabled","isSubmitting","reactstrap__WEBPACK_IMPORTED_MODULE_9__","style","marginTop","isOpen","toggle","Component"],"mappings":"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","file":"static/js/92.ab5b2d8b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Formik, FormikProps,Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Alert } from 'reactstrap';\nimport {\n  Badge,\n  Button,\n  ButtonDropdown,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Container,\n  CardGroup,\n  Col,\n  Collapse,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Fade,\n  FormGroup,\n  FormText,\n  FormFeedback,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Label,\n  Row,\n} from 'reactstrap';\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        email:'',\n        password:'',\n        wrongPass:false,\n        msgType:'success',\n        massege:'',\n        visible:false\n    };\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n  onDismiss() {\n    this.setState({ visible: false });\n  }\n  handleSubmit = (values, { \n    props = this.props, \n    setSubmitting \n  }) => {\n     \n    console.log(values);\n    if(values.email=='iiee'&&values.password=='usmanalamkhan')\n    {\n      setSubmitting(false);\n      localStorage.setItem('token','iiee')\n      localStorage.setItem('id','iiee')\n      this.props.history.push('/dashboard')\n    }\n    else\n    {\n      this.setState({ visible:true,massege:'You Dont have Admin Rights',msgType:'danger'})\n                        setSubmitting(false);\n    }\n    // fetch('http://iotapp.ephlux.com:3000/api/user/authentication',{\n    //     method: 'POST',       \n    //     headers: {\n    //                 'Content-Type': 'application/json',\n    //                 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjE4LCJpYXQiOjE1NDgxMDM2OTV9._BdaJ6Hc-oHlmV_OL_FUdHmzIO6cC8riT3IfsSXbf0w',\n    //     },\n    //     body: JSON.stringify(values),\n    //     mode: 'cors'\n    //     }).then(res => res.json())\n    //     .then(response => {\n    //         console.log(response)\n    //         if(!response.message)\n    //         {\n    //           fetch('http://iotapp.ephlux.com:3000/api/user_role/'+response.user_id, { \n    //             method: 'GET',\n    //             headers: {\n    //                 'Content-Type': 'application/json',\n    //                 'Authorization': 'Bearer '+response.token,\n    //             },\n    //             })\n    //             .then(res => res.json())\n    //             .then((res) => {\n                 \n    //               // window.location='#/dashboard'\n    //                 // console.log(res)\n    //                 if(res.roles)\n    //                 {\n    //                   if(res.roles[0].name=='admin')\n    //                   {\n    //                     localStorage.setItem('token',response.token)\n    //                     localStorage.setItem('id',response.user_id)\n    //                     this.props.history.push('/dashboard')\n                      \n    //                     // window.location='#/dashboard'\n    //                   }\n    //                   else{\n                       \n    //                     this.setState({ visible:true,massege:'You Dont have Admin Rights ',msgType:'danger'})\n    //                     setSubmitting(false);\n                       \n    //                   }\n    //                 }\n    //                 else{\n    //                   this.setState({ visible:true,massege:'You Dont have Admin Rights ',msgType:'danger'})\n    //                   setSubmitting(false);\n    //                 }\n                   \n          \n    //             });\n            \n       \n           \n      \n     \n    }\n    componentDidMount(){\n      if(localStorage.getItem('token')!=null||localStorage.getItem('token')!=undefined)\n      { \n        this.props.history.push('/dashboard')\n      }\n    }\n  render() {\n\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"5\">\n              <CardGroup>\n                <Card className=\"p-4\">\n                  <CardBody>\n                    <Form>\n                      <h1>Login</h1>\n                      <p className=\"text-muted\">Sign In to your account</p>\n                      <Formik\n                            initialValues={{\n                                email: '',\n                                password: '',\n                               \n                            }}\n                            /*validate={values => {\n                                let errors = {};\n                                if (!values.email) {\n                                  errors.email = 'Required';\n                                } else if (\n                                  !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                                ) {\n                                  errors.email = 'Invalid email address';\n                                }\n                                return errors;\n                              }}*/\n                            validationSchema={Yup.object().shape({\n                            email: Yup\n                                .string()\n                            \n                                .required(),\n                            password: Yup\n                                .string()\n                          \n                                .required(),\n                            })}\n                            onSubmit={this.handleSubmit}\n                            render={formProps => {\n                                return(\n                                <Form className=\"form-horizontal\">\n                             \n                                  \n                                   \n                                    <FormGroup row>\n                                      <InputGroup className=\"mb-3\">\n                                        <InputGroupAddon addonType=\"prepend\">\n                                          <InputGroupText>\n                                            <i className=\"icon-user\"></i>\n                                          </InputGroupText>\n                                        </InputGroupAddon>\n                                       <Field \n                                            type=\"text\" \n                                            name=\"email\" \n                                            placeholder=\"Username\" \n                                            className=\"form-control\"\n                                                /> \n                                           \n                                      </InputGroup>\n                                      <span className=\"error\"><ErrorMessage name=\"email\" /></span>\n                                                                  \n                                    </FormGroup>\n                                   \n                                   \n                                    <FormGroup row>\n                                      <InputGroup className=\"mb-4\">\n                                        <InputGroupAddon addonType=\"prepend\">\n                                          <InputGroupText>\n                                            <i className=\"icon-lock\"></i>\n                                          </InputGroupText>\n                                        </InputGroupAddon>\n                                          <Field \n                                            \n                                            type=\"password\" \n                                            name=\"password\" \n                                            placeholder=\"Password\" \n                                            className=\"form-control\"\n                                            /> \n                                          \n                                      </InputGroup>               \n                                      <span className=\"error\"><ErrorMessage name=\"password\" /></span>     \n                                    </FormGroup>\n                                   \n                                 \n                                    <div className=\"loginBtn\">\n                                    <Button \n                                        type=\"submit\"\n                                        color=\"primary\" className=\"px-4\"\n                                        \n                                        disabled={formProps.isSubmitting}>\n                                        Login\n                                    </Button>\n                                     <span className={this.state.wrongPass?'error':'hide'}>Wrong Username Password</span>\n                                    </div>\n                             \n                                    </Form>\n                                );\n                            }}\n\n                            />\n                    \n                    </Form>\n                    <Alert color={this.state.msgType} style={{marginTop:20}}isOpen={this.state.visible} toggle={this.onDismiss}>\n                                {this.state.massege}\n                    </Alert>\n                  </CardBody>\n                </Card>\n                {/* <Card className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\n                  <CardBody className=\"text-center\">\n                    <div>\n                      <h2>Sign up</h2>\n                      <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\n                        labore et dolore magna aliqua.</p>\n                      <Link to=\"/register\">\n                        <Button color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</Button>\n                      </Link>\n                    </div>\n                  </CardBody>\n                </Card> */}\n              </CardGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"],"sourceRoot":""}